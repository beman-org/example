name: Test Multi-Platform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        include:
          - os: windows-latest
            build_type: Release
            c_compiler: cl
            cpp_compiler: cl
            cmake_args: ""
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            cmake_args: "-DCMAKE_CXX_FLAGS='-Werror=all -Werror=extra'"
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            cmake_args: "-DCMAKE_CXX_FLAGS='-fsanitize=address -fsanitize=undefined'"
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            cmake_args: "-DCMAKE_CXX_FLAGS='-fsanitize=thread'" 
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            cmake_args: "-DCMAKE_CXX_STANDARD=98 -DCMAKE_CXX_STANDARD_REQUIRED=on" 
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            cmake_args: "-DCMAKE_CXX_STANDARD=11 -DCMAKE_CXX_STANDARD_REQUIRED=on" 
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            cmake_args: "-DCMAKE_CXX_STANDARD=14 -DCMAKE_CXX_STANDARD_REQUIRED=on"
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            cmake_args: "-DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_STANDARD_REQUIRED=on"
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            cmake_args: "-DCMAKE_CXX_STANDARD=20 -DCMAKE_CXX_STANDARD_REQUIRED=on" 
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            cmake_args: "-DCMAKE_CXX_FLAGS='-DBUILD_SHARED_LIBS=on" 
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            cmake_args: "-DCMAKE_CXX_FLAGS='-Werror=all -Werror=extra'" 
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            cmake_args: "-DCMAKE_CXX_FLAGS='-fsanitize=address -fsanitize=undefined'" 
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            cmake_args: "-DCMAKE_CXX_FLAGS='-fsanitize=thread'" 
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            cmake_args: "-DCMAKE_CXX_STANDARD=98 -DCMAKE_CXX_STANDARD_REQUIRED=on" 
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            cmake_args: "-DCMAKE_CXX_STANDARD=11 -DCMAKE_CXX_STANDARD_REQUIRED=on" 
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            cmake_args: "-DCMAKE_CXX_STANDARD=14 -DCMAKE_CXX_STANDARD_REQUIRED=on" 
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            cmake_args: "-DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_STANDARD_REQUIRED=on" 
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            cmake_args: "-DCMAKE_CXX_STANDARD=20 -DCMAKE_CXX_STANDARD_REQUIRED=on" 
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            cmake_args: "-DBUILD_SHARED_LIBS=on" 
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
            cmake_args: "" 

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} ${{ matrix.cmake_args }}

    - name: Build
      run: cmake --build .

    - name: Test
      run: ctest -C --output-on-failure
